
#include "TXLib.h"

int minnumg = 0;

int maxnumg = 10;

int keynum = -4;

POINT sortleast (int arr[], int start, int finish, int* assig, int* compar)
void printdata(int data[], int start, int finish)
void swap (int arr[], int ela, int elb)
int findleast (int arr[], int start, int finish, int* assig, int* compar);
int main()
    {
    txCreateWindow (800, 600);

    int Data[3565] = {};
    
    initarr  (data, 0, 100);
    printar(data, 0, 100);
    sortleast(data, 0, 100);

    return 0;
    }








POINT sortleast (int arr[], int start, int finish, int* assig, int* compar)
    {
    for (int i = start; i < finish; i++)    
        {
        least = findleast(arr, start + i, finish);
        if (least != keynum) 
            {
            swap (arr, least, i);
            *assig++;
            *compar++;
            }
        *assig++;
        }
    return {assig, compar};
    } 
        




void swap (int arr[], int ela, int elb)
    {
    int help = arr[ela];
    arr[ela] = arr[elb];
    arr[elb] = help;
    eqcount += 3;
    }


void printdata(int data[], int start, int finish)
    {
    printf ("\n");
    for (int i = start; i < finish; i++)
        {
        printf ("%d ", data[i]);
        }
    printf ("\n");
    }


void printdata(int data[], int start, int finish)
    {
    printf ("\n");
    for (int i = start; i < finish; i++)
        {
        data[i] = rand % (maxnumg - minnumg) + minnumg;
        }
    printf ("\n");
    }




int findleast (int arr[], int start, int finish, int* assig, int* compar)
    {
    int leastel  = arr[start] + 1;
    int leastpos = keynum;
    
    for (int i = start + 1; i < finish; i++)
        {
        if (arr[i] < leastel) 
            {
            leastel = arr[i]; 
            leastpos = i; 
            *assig  += 2; 
            }
        *compar += 1;
        }
    return leastpos;
    }
    
    
        
         
